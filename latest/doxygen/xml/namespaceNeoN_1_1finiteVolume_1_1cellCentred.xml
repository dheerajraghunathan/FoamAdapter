<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceNeoN_1_1finiteVolume_1_1cellCentred" kind="namespace" language="C++">
    <compoundname>NeoN::finiteVolume::cellCentred</compoundname>
    <innerclass refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" prot="public">NeoN::finiteVolume::cellCentred::Expression</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1a3b18e10c3ac36a283a8dfccc0afd70ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
          <param>
            <type>typename IndexType</type>
            <defval>localIdx</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">ValueType</ref> &gt;</type>
        <definition>VolumeField&lt; ValueType &gt; NeoN::finiteVolume::cellCentred::operator&amp;</definition>
        <argsstring>(const Expression&lt; ValueType, IndexType &gt; expr, const VolumeField&lt; ValueType &gt; &amp;psi)</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::operator&amp;</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">const</ref> <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Expression</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">ValueType</ref>, <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">IndexType</ref> &gt;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">const</ref> <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">ValueType</ref> &gt; &amp;</type>
          <declname>psi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/expression.hpp" line="191" column="1" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/expression.hpp" bodystart="191" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1a71e09fbd041a24363d9b1dabc37a0516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">void</ref></type>
        <definition>void NeoN::finiteVolume::cellCentred::constrainHbyA</definition>
        <argsstring>(VolumeField&lt; Vec3 &gt; &amp;HbyA, const VolumeField&lt; Vec3 &gt; &amp;U, const VolumeField&lt; scalar &gt; &amp;p)</argsstring>
        <name>constrainHbyA</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::constrainHbyA</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>HbyA</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">const</ref> <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>U</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">const</ref> <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">scalar</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" line="15" column="6" declfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" declline="15" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1ab31255fd8af75de282a91b8951c858ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">scalar</ref> &gt;, <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Vec3</ref> &gt; &gt;</type>
        <definition>std::tuple&lt; VolumeField&lt; scalar &gt;, VolumeField&lt; Vec3 &gt; &gt; NeoN::finiteVolume::cellCentred::discreteMomentumFields</definition>
        <argsstring>(const Expression&lt; Vec3 &gt; &amp;expr)</argsstring>
        <name>discreteMomentumFields</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::discreteMomentumFields</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">const</ref> <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Expression</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" line="22" column="1" declfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" declline="22" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1a252cdfa0bfb7e2a40da5c5508dc6af45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">void</ref></type>
        <definition>void NeoN::finiteVolume::cellCentred::updateFaceVelocity</definition>
        <argsstring>(SurfaceField&lt; scalar &gt; &amp;phi, const SurfaceField&lt; scalar &gt; &amp;predictedPhi, const Expression&lt; scalar &gt; &amp;expr)</argsstring>
        <name>updateFaceVelocity</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::updateFaceVelocity</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">SurfaceField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">scalar</ref> &gt; &amp;</type>
          <declname>phi</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">const</ref> <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">SurfaceField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">scalar</ref> &gt; &amp;</type>
          <declname>predictedPhi</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">const</ref> <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Expression</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">scalar</ref> &gt; &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" line="24" column="6" declfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1a7a7304a04b3e9b46dc7ca12bd2a27cf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">void</ref></type>
        <definition>void NeoN::finiteVolume::cellCentred::updateVelocity</definition>
        <argsstring>(VolumeField&lt; Vec3 &gt; &amp;U, const VolumeField&lt; Vec3 &gt; &amp;HbyA, VolumeField&lt; scalar &gt; &amp;rAU, VolumeField&lt; scalar &gt; &amp;p)</argsstring>
        <name>updateVelocity</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::updateVelocity</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>U</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">const</ref> <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>HbyA</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">scalar</ref> &gt; &amp;</type>
          <declname>rAU</declname>
        </param>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">scalar</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" line="30" column="6" declfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoN_1_1finiteVolume_1_1cellCentred_1a4ff7acb5abc20807253f06a3bd4e2304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">SurfaceField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">scalar</ref> &gt;</type>
        <definition>SurfaceField&lt; scalar &gt; NeoN::finiteVolume::cellCentred::flux</definition>
        <argsstring>(const VolumeField&lt; Vec3 &gt; &amp;volField)</argsstring>
        <name>flux</name>
        <qualifiedname>NeoN::finiteVolume::cellCentred::flux</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">const</ref> <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoN_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>volField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" line="41" column="14" declfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" declline="41" declcolumn="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/expression.hpp" line="11" column="1"/>
  </compounddef>
</doxygen>
